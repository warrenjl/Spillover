// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Spillover
Rcpp::List Spillover(int mcmc_samples, int spillover_covar_def, arma::vec y, arma::mat x, arma::vec distance_to_ps, arma::mat z, arma::mat spatial_dists, double metrop_var_phi_trans, double metrop_var_theta_trans, Rcpp::Nullable<Rcpp::NumericVector> trials, Rcpp::Nullable<double> sigma2_regress_prior, Rcpp::Nullable<double> a_theta_prior, Rcpp::Nullable<double> b_theta_prior, Rcpp::Nullable<double> alpha_phi_prior, Rcpp::Nullable<double> beta_phi_prior, Rcpp::Nullable<double> alpha_sigma2_w_prior, Rcpp::Nullable<double> beta_sigma2_w_prior, Rcpp::Nullable<Rcpp::NumericVector> beta_init, Rcpp::Nullable<double> lambda_init, Rcpp::Nullable<Rcpp::NumericVector> w_init, Rcpp::Nullable<double> phi_init, Rcpp::Nullable<double> theta_init, Rcpp::Nullable<double> sigma2_w_init);
RcppExport SEXP _Spillover_Spillover(SEXP mcmc_samplesSEXP, SEXP spillover_covar_defSEXP, SEXP ySEXP, SEXP xSEXP, SEXP distance_to_psSEXP, SEXP zSEXP, SEXP spatial_distsSEXP, SEXP metrop_var_phi_transSEXP, SEXP metrop_var_theta_transSEXP, SEXP trialsSEXP, SEXP sigma2_regress_priorSEXP, SEXP a_theta_priorSEXP, SEXP b_theta_priorSEXP, SEXP alpha_phi_priorSEXP, SEXP beta_phi_priorSEXP, SEXP alpha_sigma2_w_priorSEXP, SEXP beta_sigma2_w_priorSEXP, SEXP beta_initSEXP, SEXP lambda_initSEXP, SEXP w_initSEXP, SEXP phi_initSEXP, SEXP theta_initSEXP, SEXP sigma2_w_initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type mcmc_samples(mcmc_samplesSEXP);
    Rcpp::traits::input_parameter< int >::type spillover_covar_def(spillover_covar_defSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type distance_to_ps(distance_to_psSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type spatial_dists(spatial_distsSEXP);
    Rcpp::traits::input_parameter< double >::type metrop_var_phi_trans(metrop_var_phi_transSEXP);
    Rcpp::traits::input_parameter< double >::type metrop_var_theta_trans(metrop_var_theta_transSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type trials(trialsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type sigma2_regress_prior(sigma2_regress_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type a_theta_prior(a_theta_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type b_theta_prior(b_theta_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type alpha_phi_prior(alpha_phi_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type beta_phi_prior(beta_phi_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type alpha_sigma2_w_prior(alpha_sigma2_w_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type beta_sigma2_w_prior(beta_sigma2_w_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type beta_init(beta_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type lambda_init(lambda_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type w_init(w_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type phi_init(phi_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type theta_init(theta_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type sigma2_w_init(sigma2_w_initSEXP);
    rcpp_result_gen = Rcpp::wrap(Spillover(mcmc_samples, spillover_covar_def, y, x, distance_to_ps, z, spatial_dists, metrop_var_phi_trans, metrop_var_theta_trans, trials, sigma2_regress_prior, a_theta_prior, b_theta_prior, alpha_phi_prior, beta_phi_prior, alpha_sigma2_w_prior, beta_sigma2_w_prior, beta_init, lambda_init, w_init, phi_init, theta_init, sigma2_w_init));
    return rcpp_result_gen;
END_RCPP
}
// beta_lambda_update
arma::vec beta_lambda_update(arma::mat x, arma::vec spillover_covar, arma::mat z, arma::vec w_aux, arma::vec gamma, arma::vec w_old, double sigma2_regress);
RcppExport SEXP _Spillover_beta_lambda_update(SEXP xSEXP, SEXP spillover_covarSEXP, SEXP zSEXP, SEXP w_auxSEXP, SEXP gammaSEXP, SEXP w_oldSEXP, SEXP sigma2_regressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type spillover_covar(spillover_covarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w_aux(w_auxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w_old(w_oldSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_regress(sigma2_regressSEXP);
    rcpp_result_gen = Rcpp::wrap(beta_lambda_update(x, spillover_covar, z, w_aux, gamma, w_old, sigma2_regress));
    return rcpp_result_gen;
END_RCPP
}
// neg_two_loglike_update
double neg_two_loglike_update(arma::vec y, arma::mat x, arma::vec spillover_covar, arma::mat z, arma::vec beta, double lambda, arma::vec w);
RcppExport SEXP _Spillover_neg_two_loglike_update(SEXP ySEXP, SEXP xSEXP, SEXP spillover_covarSEXP, SEXP zSEXP, SEXP betaSEXP, SEXP lambdaSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type spillover_covar(spillover_covarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(neg_two_loglike_update(y, x, spillover_covar, z, beta, lambda, w));
    return rcpp_result_gen;
END_RCPP
}
// phi_update
Rcpp::List phi_update(arma::mat spatial_dists, double phi_old, arma::vec w, double sigma2_w, Rcpp::List spatial_corr_info, double alpha_phi, double beta_phi, double metrop_var_phi_trans, int acctot_phi_trans);
RcppExport SEXP _Spillover_phi_update(SEXP spatial_distsSEXP, SEXP phi_oldSEXP, SEXP wSEXP, SEXP sigma2_wSEXP, SEXP spatial_corr_infoSEXP, SEXP alpha_phiSEXP, SEXP beta_phiSEXP, SEXP metrop_var_phi_transSEXP, SEXP acctot_phi_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type spatial_dists(spatial_distsSEXP);
    Rcpp::traits::input_parameter< double >::type phi_old(phi_oldSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_w(sigma2_wSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type spatial_corr_info(spatial_corr_infoSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_phi(alpha_phiSEXP);
    Rcpp::traits::input_parameter< double >::type beta_phi(beta_phiSEXP);
    Rcpp::traits::input_parameter< double >::type metrop_var_phi_trans(metrop_var_phi_transSEXP);
    Rcpp::traits::input_parameter< int >::type acctot_phi_trans(acctot_phi_transSEXP);
    rcpp_result_gen = Rcpp::wrap(phi_update(spatial_dists, phi_old, w, sigma2_w, spatial_corr_info, alpha_phi, beta_phi, metrop_var_phi_trans, acctot_phi_trans));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_pgdraw
arma::vec rcpp_pgdraw(arma::vec b, arma::vec c);
RcppExport SEXP _Spillover_rcpp_pgdraw(SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_pgdraw(b, c));
    return rcpp_result_gen;
END_RCPP
}
// sigma2_w_update
double sigma2_w_update(arma::vec w, arma::mat corr_inv, double alpha_sigma2_w, double beta_sigma2_w);
RcppExport SEXP _Spillover_sigma2_w_update(SEXP wSEXP, SEXP corr_invSEXP, SEXP alpha_sigma2_wSEXP, SEXP beta_sigma2_wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type corr_inv(corr_invSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_sigma2_w(alpha_sigma2_wSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sigma2_w(beta_sigma2_wSEXP);
    rcpp_result_gen = Rcpp::wrap(sigma2_w_update(w, corr_inv, alpha_sigma2_w, beta_sigma2_w));
    return rcpp_result_gen;
END_RCPP
}
// spatial_corr_fun
Rcpp::List spatial_corr_fun(double phi, arma::mat spatial_dists);
RcppExport SEXP _Spillover_spatial_corr_fun(SEXP phiSEXP, SEXP spatial_distsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type spatial_dists(spatial_distsSEXP);
    rcpp_result_gen = Rcpp::wrap(spatial_corr_fun(phi, spatial_dists));
    return rcpp_result_gen;
END_RCPP
}
// theta_update
Rcpp::List theta_update(arma::mat x, arma::mat z, arma::vec distance_to_ps, double theta_old, arma::vec w_aux, arma::vec gamma, arma::vec beta, double lambda, arma::vec w, arma::vec spillover_covar_temp, int spillover_covar_def, double a_theta, double b_theta, double metrop_var_theta_trans, int acctot_theta_trans);
RcppExport SEXP _Spillover_theta_update(SEXP xSEXP, SEXP zSEXP, SEXP distance_to_psSEXP, SEXP theta_oldSEXP, SEXP w_auxSEXP, SEXP gammaSEXP, SEXP betaSEXP, SEXP lambdaSEXP, SEXP wSEXP, SEXP spillover_covar_tempSEXP, SEXP spillover_covar_defSEXP, SEXP a_thetaSEXP, SEXP b_thetaSEXP, SEXP metrop_var_theta_transSEXP, SEXP acctot_theta_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type distance_to_ps(distance_to_psSEXP);
    Rcpp::traits::input_parameter< double >::type theta_old(theta_oldSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w_aux(w_auxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type spillover_covar_temp(spillover_covar_tempSEXP);
    Rcpp::traits::input_parameter< int >::type spillover_covar_def(spillover_covar_defSEXP);
    Rcpp::traits::input_parameter< double >::type a_theta(a_thetaSEXP);
    Rcpp::traits::input_parameter< double >::type b_theta(b_thetaSEXP);
    Rcpp::traits::input_parameter< double >::type metrop_var_theta_trans(metrop_var_theta_transSEXP);
    Rcpp::traits::input_parameter< int >::type acctot_theta_trans(acctot_theta_transSEXP);
    rcpp_result_gen = Rcpp::wrap(theta_update(x, z, distance_to_ps, theta_old, w_aux, gamma, beta, lambda, w, spillover_covar_temp, spillover_covar_def, a_theta, b_theta, metrop_var_theta_trans, acctot_theta_trans));
    return rcpp_result_gen;
END_RCPP
}
// w_aux_update
Rcpp::List w_aux_update(arma::vec y, arma::mat x, arma::vec tri_als, arma::vec spillover_covar, arma::mat z, arma::vec beta_old, double lambda_old, arma::vec w_old);
RcppExport SEXP _Spillover_w_aux_update(SEXP ySEXP, SEXP xSEXP, SEXP tri_alsSEXP, SEXP spillover_covarSEXP, SEXP zSEXP, SEXP beta_oldSEXP, SEXP lambda_oldSEXP, SEXP w_oldSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tri_als(tri_alsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type spillover_covar(spillover_covarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_old(beta_oldSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_old(lambda_oldSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w_old(w_oldSEXP);
    rcpp_result_gen = Rcpp::wrap(w_aux_update(y, x, tri_als, spillover_covar, z, beta_old, lambda_old, w_old));
    return rcpp_result_gen;
END_RCPP
}
// w_update
arma::vec w_update(arma::mat x, arma::vec spillover_covar, arma::mat z, arma::vec w_aux, arma::vec gamma, arma::vec beta, double lambda, double sigma2_w_old, arma::mat corr_inv);
RcppExport SEXP _Spillover_w_update(SEXP xSEXP, SEXP spillover_covarSEXP, SEXP zSEXP, SEXP w_auxSEXP, SEXP gammaSEXP, SEXP betaSEXP, SEXP lambdaSEXP, SEXP sigma2_w_oldSEXP, SEXP corr_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type spillover_covar(spillover_covarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w_aux(w_auxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_w_old(sigma2_w_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type corr_inv(corr_invSEXP);
    rcpp_result_gen = Rcpp::wrap(w_update(x, spillover_covar, z, w_aux, gamma, beta, lambda, sigma2_w_old, corr_inv));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Spillover_Spillover", (DL_FUNC) &_Spillover_Spillover, 23},
    {"_Spillover_beta_lambda_update", (DL_FUNC) &_Spillover_beta_lambda_update, 7},
    {"_Spillover_neg_two_loglike_update", (DL_FUNC) &_Spillover_neg_two_loglike_update, 7},
    {"_Spillover_phi_update", (DL_FUNC) &_Spillover_phi_update, 9},
    {"_Spillover_rcpp_pgdraw", (DL_FUNC) &_Spillover_rcpp_pgdraw, 2},
    {"_Spillover_sigma2_w_update", (DL_FUNC) &_Spillover_sigma2_w_update, 4},
    {"_Spillover_spatial_corr_fun", (DL_FUNC) &_Spillover_spatial_corr_fun, 2},
    {"_Spillover_theta_update", (DL_FUNC) &_Spillover_theta_update, 15},
    {"_Spillover_w_aux_update", (DL_FUNC) &_Spillover_w_aux_update, 8},
    {"_Spillover_w_update", (DL_FUNC) &_Spillover_w_update, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_Spillover(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
